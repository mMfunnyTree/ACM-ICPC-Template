#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N=100010;
//union find
int f[N];
void INIT(int size)
{ for(int i=0;i<=size;i++) f[i]=i; }
int findf(int x)
{ while(f[x]!=x) x=f[x]; return x; }
void setroot(int x)
{ if(f[x]!=x) setroot(f[x]); f[x]=f[f[x]]=x; }
void link(int a,int b)
{ setroot(a); f[a]=b; }
void cut(int a,int b)
{ setroot(a); f[b]=b; }
char op[10];
int main(){
    int n,a,b;
    scanf("%d",&n);
    INIT(n);
    while(scanf("%s",op)&&op[0]!='E') {
        scanf("%d%d",&a,&b);
        if(op[0]=='C') link(a,b);
        else if(op[0]=='D')cut(a,b);
        else {
            if(findf(a)==findf(b))puts("YES");
            else puts("NO");
            fflush(stdout);
        }
    }
    return 0;
}