/**SAM最长公共子串问题**/
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int maxn = 4010;
char s[maxn];
int pa[maxn],son[maxn][27];
int deep[maxn],cnt,root,last;
int ans[maxn][maxn];
int tot;

inline int newnode(int _deep){
    deep[++cnt]=_deep;
    return cnt;
}

inline void sam(int alp){
    int np=newnode(deep[last]+1);
    int u=last;
    memset(son[np],0,sizeof son[np]);
    while(u && !son[u][alp])son[u][alp]=np,u=pa[u];
    if(!u)pa[np]=root;
    else{
        int v=son[u][alp];
        if(deep[v]==deep[u]+1)pa[np]=v;
        else{
            int nv=newnode(deep[u]+1);
            memcpy(son[nv],son[v],sizeof son[v]);
            pa[nv]=pa[v],pa[v]=pa[np]=nv;
            while(u&&son[u][alp]==v)son[u][alp]=nv,u=pa[u];
        }
    }
    last=np;
    tot+=deep[np]-deep[pa[np]];
}

inline void pre(){
    cnt=0;
    memset(son[1],0,sizeof son[1]);
    root=last=newnode(0);
    tot=0;
}

int main(){
    int t;cin>>t;
    while(t--){
        memset(ans,0,sizeof ans);
        scanf("%s",s);
        int len=strlen(s);
        for(int i=0;i<len;i++){
            pre();
            for(int j=i;j<len;j++){
                sam(s[j]-'a');
                ans[i][j]=tot;
            }
        }
        int q;scanf("%d",&q);
        while(q--){
            int l,r;
            scanf("%d%d",&l,&r);
            printf("%d\n",ans[l-1][r-1]);
        }
    }
    return 0;
}