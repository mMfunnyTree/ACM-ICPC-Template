#include <bits/stdc++.h>
using namespace std;

int c[1000];
int flag[1000][300]={0};
int cnt[3000]={0};
char qwq[10000];
int n;
double k;
int m=1;
int km;
long long  ans=0;
int vec[3000],j=0;

void subset(int lis[], int tag[], int n,int len)
{
    if (n == len)
    {
        int fla=0;
        for(int j=1;j<=m;j++)
        {
            int ret=1;
            for (int i = 0; i < len; i++)
            {
                if (tag[i]==1&&flag[j][vec[i]]==0)
                {ret=0;break;}
            }
            fla+=ret;
        }
        if(fla>=km)ans+=1LL;
        return;
    }
    tag[n] = 0;
    subset(lis, tag, n + 1,len);
    tag[n] = 1;
    subset(lis, tag, n + 1,len);
}

int main()
{
    scanf("%d %lf",&n,&k);
    getchar();
    while(gets(qwq))
    {
        int temp=0;
        for(int i=0;i<strlen(qwq);i++)
        {
            if(qwq[i]!=' ')
            {
                temp*=10;temp+=(qwq[i]-'0');
            }
            else
            {
                flag[m][temp]=1;
                cnt[temp]++;
                temp=0;
            }
        }
        if(temp){
        flag[m][temp]=1;
        cnt[temp]++;
        temp=0;}
        m++;
    }m--;
    km=ceil(k*m);
    j=0;
    for(int i=1;i<=n;i++)
    {
        if(cnt[i]>=km)
        {
            vec[j++]=i;
        }
    }
    subset(vec,c,0,j);

    cout<<ans-1<<endl;
    return 0;
}