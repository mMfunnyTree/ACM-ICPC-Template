#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define maxn 100005

struct node{
    int u,v,w;
    int id;
    node(int id,int u=0,int v=0,int w=0):id(id),u(u),v(v),w(w){}
};
vector<node> g[maxn],mp[maxn];
int u[maxn],v[maxn],w[maxn];

int ans=1;
int vis[maxn];
int dp[maxn];

int get(int u){
    if(vis[u])return dp[u];
    vis[u]=1;
    for(auto e:mp[u]){
        dp[u]=max(dp[u],get(e.v)+1);
    }
    return dp[u];
}

int main(){
    ll n,m;
    cin>>n>>m;
    for(int i=1;i<=m;i++){
        scanf("%d%d%d",u+i,v+i,w+i);
        g[u[i]].push_back(node(i,u[i],v[i],w[i]));
    }
    for(int i=1;i<=n;i++){
        for(auto e:g[i]){
            int j=e.v;
            for(auto ee:g[j]){
                if(e.w<ee.w && e.id<ee.id){
                    mp[e.id].push_back(node(e.id,e.id,ee.id,ee.w));
                }
            }
        }
    }
    memset(vis,0,sizeof(vis));
    for(int i=1;i<=m;i++){
            dp[i]=max(dp[i],get(i));
    }cout<<*max_element(dp+1,dp+1+m)+1;
	return 0;
}